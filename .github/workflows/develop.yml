name: Develop workflow

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:

  build:

    name: Build and push packages ‚öôÔ∏è
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.version-generator.outputs.version }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Set Version Number
      id: version-generator
      run: echo "version=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
    
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.406'
    
    - name: Install dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Unit test
      run: echo "Executing unit tests ‚úÖ"

    - name: Create artifacts folder
      run: |
        mkdir "$GITHUB_WORKSPACE/artifacts"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Database"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Web"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.ProductService"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.ShoppingCartService"
    
    - name: Publish OctoPetShopDatabase
      run: dotnet publish OctopusSamples.OctoPetShop.Database/OctopusSamples.OctoPetShop.Database.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Database"
    
    - name: Publish OctoPetShopWeb
      run: dotnet publish OctopusSamples.OctoPetShop.Web/OctopusSamples.OctoPetShop.Web.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Web"
    
    - name: Publish OctoPetShopProductService
      run: dotnet publish OctopusSamples.OctoPetShop.ProductService/OctopusSamples.OctoPetShop.ProductService.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.ProductService"
    
    - name: Publish OctoPetShopShoppingCartService
      run: dotnet publish OctopusSamples.OctoPetShop.ShoppingCartService/OctopusSamples.OctoPetShop.ShoppingCartService.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetshop.ShoppingCartService"
    
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.1.6
      with:
        version: latest

    - name: Package OctoPetShop.Database üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.Database"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.Database"
        files: |
          **/*.*

    - name: Package OctoPetShop.Web üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.Web"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.Web"
        files: |
          **/*.*

    - name: Package OctoPetShop.ProductService üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.ProductService"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.ProductService"
        files: |
          **/*.*

    - name: Package OctoPetShop.ShoppingCartService üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.ShoppingCartService"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.ShoppingCartService"
        files: |
          **/*.*

    - name: Push OctoPetShop Packages
      uses: OctopusDeploy/push-package-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_KEY }}
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
        space: ${{ secrets.OCTOPUS_SPACE_NAME }}
        packages: |
          artifacts/OctoPetShop.Database.${{ steps.version-generator.outputs.version }}.zip
          artifacts/OctoPetShop.Web.${{ steps.version-generator.outputs.version }}.zip
          artifacts/OctoPetShop.ProductService.${{ steps.version-generator.outputs.version }}.zip
          artifacts/OctoPetShop.ShoppingCartService.${{ steps.version-generator.outputs.version }}.zip

  code-analysis:
    name: Run code analysis üß™
    runs-on: ubuntu-latest

    steps:
      - name: Run code analysis
        run: echo "Executing code analysis ‚úÖ"

  sast:
    name: Run SAST üß™
    runs-on: ubuntu-latest
      
    steps:
      - name: Run SAST
        run: echo "Executing SAST ‚úÖ"

  push-build-information:
      name: Push Build Information to Octopus üêô
      needs: build 
      runs-on: ubuntu-latest
      
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE_NAME }}
      
      steps:
      - uses: OctopusDeploy/push-build-information-action@v3
        name: Push Build Information
        with:
          version: ${{ needs.build.outputs.version }}
          packages: |
            OctoPetShop.Database
            OctoPetShop.Web
            OctoPetShop.ProductService
            OctoPetShop.ShoppingCartService
    
  create-octopus-release:
  
      name: Create Octopus Release üêô
      needs: [build, push-build-information]
      runs-on: ubuntu-latest
      
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE_NAME }}
        
      steps:

        - uses: OctopusDeploy/create-release-action@v3
          id: "create-release-2"
          with:
            project: "OctoPetShop - Gitflow 2"
            release_number: ${{ needs.build.outputs.version }}

        - uses: OctopusDeploy/deploy-release-action@v3
          id: "deploy-release-2"
          with:
            project: "OctoPetShop - Gitflow 2"
            release_number: ${{ needs.build.outputs.version }}
            environments: Development

        - uses: OctopusDeploy/await-task-action@v3
          id: "wait-for-deploy-2"
          with:
            server_task_id: ${{ fromJson(steps.deploy-release-2.outputs.server_tasks)[0].serverTaskId }}

  approval:
    name: Approve deployment ‚úÖ
    needs: [create-octopus-release, code-analysis, sast]
    runs-on: ubuntu-latest
    environment: 'Hom'

    steps:
      - name: Gather approval
        run: echo "Approval gathered ‚úÖ"