step "verify-port-is-open" {
    name = "Verify port is open"
    properties = {
        Octopus.Action.TargetRoles = "octofx-web"
    }

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptBody = <<-EOT
                $port = $OctopusParameters["OPS.Web.Portal.Port"]
                netsh advfirewall firewall add rule name="Open Port $port" dir=in action=allow protocol=TCP localport=$port
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool_variable = ""
    }
}

step "sql-create-database-if-not-exists" {
    name = "Verify database exists"

    action "verify-database-exists" {
        properties = {
            createAzureEdition = "basic"
            createCommandTimeout = "180"
            createDatabaseName = "#{OPS.Database.Name}"
            createSqlDatabaseRetryAttempts = "0"
            createSqlLoginPasswordWhoHasRights = "#{OPS.Database.Admin.Password}"
            createSqlLoginUserWhoHasCreateUserRights = "#{OPS.Database.Admin.User}"
            createSqlServer = "#{OPS.Database.Server}"
            Octopus.Action.Template.Id = "ActionTemplates-2063"
            Octopus.Action.Template.Version = "5"
        }
        worker_pool = "azure-worker-pool"
    }
}

step "execute-database-deployment" {
    name = "Deploy database changes"

    action "deploy-database-changes" {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                $packagePath = $OctopusParameters["Octopus.Action.Package[OctoPetShop.Database].ExtractedPath"]
                $connectionString = $OctopusParameters["OPS.Database.ConnectionString"]
                $environmentName = $OctopusParameters["Octopus.Environment.Name"]
                
                $dllToRun = (Get-ChildItem -Path $packagePath -Recurse | Where-Object {$_.Name -eq "OctopusSamples.OctoPetShop.Database.dll"}).FullName
                
                if ((test-path $dllToRun) -eq $false)
                {
                	Write-Error "$dllToRun not found!"
                }
                else
                {
                	dotnet $dllToRun --ConnectionString="$connectionString"
                }
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "azure-worker-pool"

        packages "OctoPetShop.Database" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "OctoPetShop.Database"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "ops-product-service" {
    name = "Deploy product service"
    properties = {
        Octopus.Action.TargetRoles = "octopetshop-productservice"
    }

    action "deploy-product-service" {
        action_type = "Octopus.IIS"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "No Managed Code"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.ApplicationPoolName = "OctoPetShop.ProductService"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"port\":\"#{OPS.ProductService.Port}\",\"host\":\"\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "True"
            Octopus.Action.IISWebSite.DeploymentType = "webSite"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "True"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "False"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.IISWebSite.WebSiteName = "#{OPS.ProductService.Name}"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "OctoPetShop.ProductService"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "OctoPetShop.ProductService"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "ops-shopping-cart" {
    name = "Deploy shopping cart service"
    properties = {
        Octopus.Action.TargetRoles = "octopetshop-cartservice"
    }
    start_trigger = "StartWithPrevious"

    action "deploy-shopping-cart-service" {
        action_type = "Octopus.IIS"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "No Managed Code"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.ApplicationPoolName = "OctoPetShop.ShoppingCartService"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"ipAddress\":\"*\",\"port\":\"#{OPS.ShoppingCartService.Port}\",\"host\":\"\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "True"
            Octopus.Action.IISWebSite.DeploymentType = "webSite"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "True"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "False"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.IISWebSite.WebSiteName = "#{OPS.ShoppingCartService.Name}"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "OctoPetShop.ShoppingCartService"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "OctoPetShop.ShoppingCartService"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "ops-web" {
    name = "Deploy web site"
    properties = {
        Octopus.Action.TargetRoles = "octopetshop-web"
    }

    action "deploy-web-site" {
        action_type = "Octopus.IIS"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "No Managed Code"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.ApplicationPoolName = "OctoPetShop.Web"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"port\":\"#{OPS.Web.Portal.Port}\",\"host\":\"\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "True"
            Octopus.Action.IISWebSite.DeploymentType = "webSite"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "True"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "False"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.IISWebSite.WebSiteName = "#{OPS.Web.Portal.Service}"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "OctoPetShop.Web"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "OctoPetShop.Web"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "smoke-test-api-endpoints" {
    name = "Smoke test web site"
    properties = {
        Octopus.Action.TargetRoles = "octopetshop-web"
    }

    action {
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-2064"
            Octopus.Action.Template.Version = "6"
            smoketest.baseURI = "#{OPS.Web.Portal.URL}"
        }
        worker_pool_variable = ""
    }
}

step "send-completion-notification" {
    name = "Send completion notification"

    action {
        action_type = "Octopus.Email"
        environments = ["production"]
        is_required = true
        properties = {
            Octopus.Action.Email.Body = "#{Octopus.Release.Notes}"
            Octopus.Action.Email.Priority = "High"
            Octopus.Action.Email.Subject = "Release #{Octopus.Release.Number} has been deployed to #{Octopus.Environment.Name}"
            Octopus.Action.Email.To = "#{Octopus.Deployment.CreatedBy.EmailAddress}"
            Octopus.Action.RunOnServer = "false"
        }
    }
}